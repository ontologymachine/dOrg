{"version":3,"sources":["redux/actions/internal/index.ts","components/Background.tsx","components/Layout.tsx","components/Home.tsx","redux/actions/internal/typeSafety.ts","redux/actions/daoCreator.ts","lib/integrations/web3/index.ts","lib/integrations/web3/typeValidation.ts","lib/formValidation.ts","components/DaoCreator/NamingStep.tsx","lib/integrations/charts/index.tsx","lib/integrations/ethAddressAvatar/index.tsx","components/DaoCreator/FoundersStep.tsx","components/DaoCreator/FeaturesStep.tsx","components/DaoCreator/VotingStep.tsx","components/DaoCreator/ReviewStep.tsx","components/DaoCreator/LiveDao.tsx","components/DaoCreator/index.tsx","redux/actions/notifications.ts","components/Notifications.tsx","components/WaitingAnimation.tsx","App.tsx","redux/reducers/notifications.ts","redux/reducers/daoCreator.ts","redux/reducers/waitingAnimation.ts","redux/reducers/index.ts","style/theme.ts","index.tsx","redux/store/index.ts","lib/integrations/daoStack/arc/typeConversions.ts","lib/integrations/daoStack/arc/schemes.ts","lib/integrations/daoStack/arc/votingMachines.ts","lib/integrations/daoStack/arc/index.ts","../node_modules/@daostack/arc.js/migrated_contracts sync /^/.//.*/.json$"],"names":["Actions","withStyles","_ref2","Object","objectDestructuringEmpty","createStyles","background","width","height","overflow","position","_ref","classes","react","particles_default","a","params","particles","number","value","size","interactivity","events","onhover","enable","mode","className","palette","spacing","root","flexGrow","zIndex","display","minWidth","backgroundColor","minHeight","content","padding","unit","paddingTop","children","components_Background","componentWithStyles","card","maxWidth","margin","marginTop","cardContent","textAlign","header","button","createDao","index_es","variant","onClick","connect","state","dispatch","push","createAction","type","createPayloadAction","payload","daoCreateNextStep","DAO_CREATE_NEXT_STEP","daoCreatePrevStep","DAO_CREATE_PREV_STEP","daoCreateSetName","DAO_CREATE_SET_NAME","daoCreateSetToken","DAO_CREATE_SET_TOKEN","daoCreateSetTokenSym","DAO_CREATE_SET_TOKEN_SYM","daoCreateAddFounder","DAO_CREATE_ADD_FOUNDER","daoCreateAddScheme","DAO_CREATE_ADD_SCHEME","daoCreateRemScheme","DAO_CREATE_REM_SCHEME","daoCreateSetDeployedDao","DAO_CREATE_SET_DEPLOYED_DAO","daoCreateAddVoteMachine","DAO_CREATE_ADD_VOTE_MACHINE","daoCreateSetStepValidation","DAO_CREATE_SET_STEP_VALIDATION","notificationInfo","NOTIFICATION_INFO","notificationError","NOTIFICATION_ERROR","NotificationClose","NOTIFICATION_CLOSE","waitingAnimationOpen","WAITING_ANIMATION_OPEN","waitingAnimationClose","WAITING_ANIMATION_CLOSE","nextStep","Promise","resolve","prevStep","setName","name","setTokenName","tokenName","setTokenSymbol","tokenSymbol","addFounder","founder","addScheme","scheme","remScheme","setVotingMachine","votingMachineConfiguration","asyncToGenerator","regenerator_default","mark","_callee","getState","_getState$daoCreator","naming","founders","schemes","dao","wrap","_context","prev","next","message","daoCreator","Arc","sent","abrupt","t0","stop","this","_x","_x2","apply","arguments","setStepIsValide","isValide","step","web3","Web3","TypeValidation","isAddress","address","utils","isBigNumber","toBN","_unused","typeValidation","currentProvider","providers","HttpProvider","checkIfHasError","predicate","errorMessage","isRequired","R","isValideAddress","addr","requiredFields","NamingStep","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","daoName","formErrors","handleChange","event","_event$target","formHasAllValues","stepIsValide","target","FormValidation","setState","defineProperty","field","key","stepValide","actions","_this$state","headline","gutterBottom","container","item","xs","md","guideText","label","onChange","onBlur","fullWidth","required","error","helperText","React","fontSize","paddingLeft","paddingRight","paddingBottom","stepValidation","bindActionCreators","daoCreatorActions","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","concat","toFixed","PieChart","data","config","chart_PieChart","style","hight","Pie","dataKey","dataObject","parseInt","nameKey","labelLine","map","entry","Cell","length","Tooltip","EthAddressAvatar","main_default","seed","initState","tokens","reputation","formIsValide","FoundersStep","founderAlreadyPresent","addedFounders","onAddFounder","addedFounder","_ref3","ethAddressAvatar","_this$props","sm","pieChartHeadlines","charts","addLine","addButtonWrapper","addButton","color","aria-label","disabled","theme","marginBottom","justifyContent","marginRight","subheader","addedSchemes","typeName","checked","primary","displayName","secondary","description","getVotingMachineDefaultParams","votingMachine","votingMachines","acc","param","defaultValue","VotingStep","currentVotingMachineConfiguration","_this2","currentVotingMachine","_callee2","_context2","inputProps","id","votingMachineDescription","displayFounder","displayScheme","_ref4","addingTop","stepNumber","avatarAddress","controllerAddress","deployedDao","steps","title","component","DaoCreator_NamingStep","DaoCreator_FoundersStep","FeaturesStep","DaoCreator_VotingStep","DaoCreator_ReviewStep","LiveDao","isDeployStep","isLastStep","activeStep","thisStep","ownProps","newNotificationInfo","newNotificationError","closeNotification","dark","info","open","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","match","notification","notificationActions","dialogContent","aria-labelledby","waitingAnimation","App","components_Layout","Switch","Route","exact","path","Home","DaoCreator","ReviewStep","WaitingAnimation","components_Notifications","initialState","toggleDefault","undefined","reducer","combineReducers","action","newStep","createMuiTheme","typography","useNextVariants","main","contrastText","history","createHashHistory","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","connectRouter","applyMiddleware","routerMiddleware","thunkMiddleware","configureStore","ReactDOM","es","lib","core_styles","CssBaseline_default","src_App","document","getElementById","toFounderConfigs","BigNumber","toSchemeConfigs","toVotingMachineParams","votingMachineParams","_home_travis_build_dOrgTech_dOrg_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","votingMachineName","toNewDaoConfig","fromDao","_home_travis_build_dOrgTech_dOrg_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_dOrgTech_dOrg_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","arkDao","avatar","t1","controller","t2","token","getTokenSymbol","t3","t4","__webpack_require__","d","__webpack_exports__","valueType","optional","isInitialized","init","ConfigService","set","InitializeArcJs","watchForAccountChanges","newDaoConfig","rawDao","ArcDAO","new","console","log","reject","_x3","_x4","./ARCDebug.json","./ARCGenesisProtocolCallbacksMock.json","./ARCVotingMachineCallbacksMock.json","./AbsoluteVote.json","./AbsoluteVoteExecuteMock.json","./ActionMock.json","./Auction4Reputation.json","./Avatar.json","./BasicToken.json","./BurnableToken.json","./ContributionReward.json","./Controller.json","./ControllerCreator.json","./ControllerInterface.json","./DAOToken.json","./DaoCreator.json","./Debug.json","./Destructible.json","./ECRecovery.json","./ERC20.json","./ERC20Basic.json","./ERC827.json","./ERC827Token.json","./ERC827TokenMock.json","./ExternalLocking4Reputation.json","./ExternalTokenLockerMock.json","./FixedReputationAllocation.json","./Forwarder.json","./GenericScheme.json","./GenesisProtocol.json","./GenesisProtocolCallbacks.json","./GenesisProtocolCallbacksInterface.json","./GenesisProtocolCallbacksMock.json","./GenesisProtocolExecuteInterface.json","./GlobalConstraintInterface.json","./GlobalConstraintMock.json","./GlobalConstraintRegistrar.json","./IntVoteInterface.json","./Locking4Reputation.json","./LockingEth4Reputation.json","./LockingToken4Reputation.json","./Migrations.json","./MintableToken.json","./MirrorContractICO.json","./OrderStatisticTree.json","./OrganizationRegister.json","./Ownable.json","./ProposalExecuteInterface.json","./QuorumVote.json","./RealMath.json","./Redeemer.json","./Reputation.json","./SafeERC20.json","./SafeMath.json","./SchemeRegistrar.json","./SimpleICO.json","./StandardToken.json","./StandardTokenMock.json","./TokenCapGC.json","./UController.json","./UniversalScheme.json","./UniversalSchemeInterface.json","./UniversalSchemeMock.json","./UpgradeScheme.json","./VestingScheme.json","./VoteInOrganizationScheme.json","./VotingMachineCallbacks.json","./VotingMachineCallbacksInterface.json","./migration.json","webpackContext","req","webpackContextResolve","e","Error","code","keys","module","exports"],"mappings":"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","file":"static/js/main.d4fbdab9.chunk.js","sourcesContent":["export enum Actions {\n  // DAO Creator\n  DAO_CREATE_NEXT_STEP = \"DAO_CREATE_NEXT_STEP\",\n  DAO_CREATE_PREV_STEP = \"DAO_CREATE_PREV_STEP\",\n  DAO_CREATE_SET_NAME = \"DAO_CREATE_SET_NAME\",\n  DAO_CREATE_SET_TOKEN = \"DAO_CREATE_SET_TOKEN\",\n  DAO_CREATE_SET_TOKEN_SYM = \"DAO_CREATE_SET_TOKEN_SYM\",\n  DAO_CREATE_ADD_FOUNDER = \"DAO_CREATE_ADD_FOUNDER\",\n  DAO_CREATE_ADD_SCHEME = \"DAO_CREATE_ADD_SCHEME\",\n  DAO_CREATE_REM_SCHEME = \"DAO_CREATE_REM_SCHEME\",\n  DAO_CREATE_ADD_VOTE_MACHINE = \"DAO_CREATE_ADD_VOTE_MACHINE\",\n  DAO_CREATE_SET_DEPLOYED_DAO = \"DAO_CREATE_SET_DEPLOYED_DAO\",\n  DAO_CREATE_SET_STEP_VALIDATION = \"DAO_CREATE_SET_STEP_VALIDATION\",\n\n  // Notifications\n  NOTIFICATION_INFO = \"NOTIFICATION_INFO\",\n  NOTIFICATION_ERROR = \"NOTIFICATION_ERROR\",\n  NOTIFICATION_CLOSE = \"NOTIFICATION_CLOSE\",\n\n  // Waiting Animation\n  WAITING_ANIMATION_OPEN = \"OPEN_WAITING_ANIMATION\",\n  WAITING_ANIMATION_CLOSE = \"CLOSE_WAITING_ANIMATION\",\n}\n\nimport {\n  Action,\n  AnyAction,\n  createAction,\n  PayloadAction,\n  createPayloadAction,\n} from \"./typeSafety\"\n\n// TODO: get layer 2 types instead? or UI types? I think layer 2 makes most sense...\nimport * as Arc from \"../../../lib/integrations/daoStack/arc\"\n\n// DAO Creator\nexport interface DaoCreateNextStep extends Action<string> {\n  type: Actions.DAO_CREATE_NEXT_STEP\n}\nexport const daoCreateNextStep = createAction<DaoCreateNextStep>(\n  Actions.DAO_CREATE_NEXT_STEP\n)\n\nexport interface DaoCreatePrevStep extends Action<string> {\n  type: Actions.DAO_CREATE_PREV_STEP\n}\nexport const daoCreatePrevStep = createAction<DaoCreatePrevStep>(\n  Actions.DAO_CREATE_PREV_STEP\n)\n\nexport interface DaoCreateSetName extends PayloadAction<string, string> {\n  type: Actions.DAO_CREATE_SET_NAME\n}\nexport const daoCreateSetName = createPayloadAction<DaoCreateSetName>(\n  Actions.DAO_CREATE_SET_NAME\n)\n\nexport interface DaoCreateSetToken extends PayloadAction<string, string> {\n  type: Actions.DAO_CREATE_SET_TOKEN\n}\nexport const daoCreateSetToken = createPayloadAction<DaoCreateSetToken>(\n  Actions.DAO_CREATE_SET_TOKEN\n)\n\nexport interface DaoCreateSetTokenSym extends PayloadAction<string, string> {\n  type: Actions.DAO_CREATE_SET_TOKEN_SYM\n}\nexport const daoCreateSetTokenSym = createPayloadAction<DaoCreateSetTokenSym>(\n  Actions.DAO_CREATE_SET_TOKEN_SYM\n)\n\nexport interface DaoCreateAddFounder\n  extends PayloadAction<string, Arc.Founder> {\n  type: Actions.DAO_CREATE_ADD_FOUNDER\n}\nexport const daoCreateAddFounder = createPayloadAction<DaoCreateAddFounder>(\n  Actions.DAO_CREATE_ADD_FOUNDER\n)\n\nexport interface DaoCreateAddScheme extends PayloadAction<string, Arc.Scheme> {\n  type: Actions.DAO_CREATE_ADD_SCHEME\n}\nexport const daoCreateAddScheme = createPayloadAction<DaoCreateAddScheme>(\n  Actions.DAO_CREATE_ADD_SCHEME\n)\n\nexport interface DaoCreateRemScheme extends PayloadAction<string, Arc.Scheme> {\n  type: Actions.DAO_CREATE_REM_SCHEME\n}\nexport const daoCreateRemScheme = createPayloadAction<DaoCreateRemScheme>(\n  Actions.DAO_CREATE_REM_SCHEME\n)\n\nexport interface DaoCreateSetDeployedDao\n  extends PayloadAction<string, Arc.DAO> {\n  type: Actions.DAO_CREATE_SET_DEPLOYED_DAO\n}\nexport const daoCreateSetDeployedDao = createPayloadAction<\n  DaoCreateSetDeployedDao\n>(Actions.DAO_CREATE_SET_DEPLOYED_DAO)\n\nexport interface DaoCreateAddVoteMachine\n  extends PayloadAction<string, Arc.VotingMachineConfiguration> {\n  type: Actions.DAO_CREATE_ADD_VOTE_MACHINE\n}\nexport const daoCreateAddVoteMachine = createPayloadAction<\n  DaoCreateAddVoteMachine\n>(Actions.DAO_CREATE_ADD_VOTE_MACHINE)\n\nexport interface DaoCreateSetStepValidation\n  extends PayloadAction<string, { step: number; isValide: boolean }> {\n  type: Actions.DAO_CREATE_SET_STEP_VALIDATION\n}\nexport const daoCreateSetStepValidation = createPayloadAction<\n  DaoCreateSetStepValidation\n>(Actions.DAO_CREATE_SET_STEP_VALIDATION)\n\n// Notifications\nexport interface NotificationInfo extends PayloadAction<string, string> {\n  type: Actions.NOTIFICATION_INFO\n}\nexport const notificationInfo = createPayloadAction<NotificationInfo>(\n  Actions.NOTIFICATION_INFO\n)\n\nexport interface NotificationError extends PayloadAction<string, string> {\n  type: Actions.NOTIFICATION_ERROR\n}\nexport const notificationError = createPayloadAction<NotificationError>(\n  Actions.NOTIFICATION_ERROR\n)\n\nexport interface NotificationClose extends Action<string> {\n  type: Actions.NOTIFICATION_CLOSE\n}\nexport const NotificationClose = createAction<NotificationClose>(\n  Actions.NOTIFICATION_CLOSE\n)\n\nexport interface WaitingAnimationOpen\n  extends PayloadAction<string, { type?: \"transaction\"; message: string }> {\n  type: Actions.WAITING_ANIMATION_OPEN\n}\nexport const waitingAnimationOpen = createPayloadAction<WaitingAnimationOpen>(\n  Actions.WAITING_ANIMATION_OPEN\n)\n\nexport interface WaitingAnimationClose extends Action<string> {\n  type: Actions.WAITING_ANIMATION_CLOSE\n}\nexport const waitingAnimationClose = createAction<WaitingAnimationClose>(\n  Actions.WAITING_ANIMATION_CLOSE\n)\n\nexport type AnyAction =\n  | DaoCreateNextStep\n  | DaoCreatePrevStep\n  | DaoCreateSetName\n  | DaoCreateSetToken\n  | DaoCreateSetTokenSym\n  | DaoCreateAddFounder\n  | DaoCreateAddScheme\n  | DaoCreateRemScheme\n  | DaoCreateAddVoteMachine\n  | DaoCreateSetDeployedDao\n  | DaoCreateSetStepValidation\n  | NotificationInfo\n  | NotificationError\n  | NotificationClose\n  | WaitingAnimationOpen\n  | WaitingAnimationClose\n","import * as React from \"react\"\nimport { withStyles, Theme, WithStyles, createStyles } from \"@material-ui/core\"\nimport Particles from \"react-particles-js\"\n\ninterface Props extends WithStyles<typeof styles> {}\n\nconst Background: React.SFC<Props> = ({ classes }) => (\n  <>\n    <Particles\n      params={{\n        particles: {\n          number: {\n            value: 80,\n          },\n          size: {\n            value: 5,\n          },\n        },\n        interactivity: {\n          events: {\n            onhover: {\n              enable: true,\n              mode: \"repulse\",\n            },\n          },\n        },\n      }}\n      className={classes.background}\n    />\n  </>\n)\n\nconst styles = ({  }: Theme) =>\n  createStyles({\n    background: {\n      width: \"100%\",\n      height: \"100%\",\n      overflow: \"hidden\",\n      position: \"absolute\",\n    },\n  })\n\nexport default withStyles(styles)(Background)\n","import * as React from \"react\"\nimport { SFC } from \"react\"\nimport { withStyles, createStyles, Theme, WithStyles } from \"@material-ui/core\"\nimport Background from \"./Background\"\n\ninterface Props extends WithStyles<typeof styles> {}\n\nconst Layout: SFC<Props> = ({ classes, children }) => (\n  <div className={classes.root}>\n    <main className={classes.background}>\n      <Background />\n      <div className={classes.content}>{children}</div>\n    </main>\n  </div>\n)\n\nconst styles = ({ palette, spacing }: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      zIndex: 1,\n      overflow: \"hidden\",\n      position: \"relative\",\n      display: \"flex\",\n    },\n    background: {\n      flexGrow: 1,\n      minWidth: 0, // So the Typography noWrap works\n      backgroundColor: \"#000000\",\n      minHeight: \"100vh\",\n    },\n    content: {\n      padding: spacing.unit,\n      paddingTop: 64,\n    },\n  })\n\nexport default withStyles(styles)(Layout)\n","import * as React from \"react\"\nimport { connect } from \"react-redux\"\nimport { push } from \"connected-react-router\"\nimport {\n  withStyles,\n  Typography,\n  Theme,\n  WithStyles,\n  createStyles,\n  Card,\n  Button,\n  CardContent,\n} from \"@material-ui/core\"\n\ninterface Props extends WithStyles<typeof styles> {\n  createDao: () => void\n}\n\nconst Home: React.SFC<Props> = ({ classes, createDao }) => (\n  <>\n    <Card className={classes.card}>\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h1\" className={classes.header}>\n          dOrg\n        </Typography>\n        <Typography variant=\"h5\" className={classes.header}>\n          Empowering Decentralized Organization\n        </Typography>\n        <Button variant=\"contained\" className={classes.button}>\n          What's a DAO?\n        </Button>\n        <Button variant=\"contained\" className={classes.button} onClick={createDao}>\n          Create a DAO\n        </Button>\n        <Button variant=\"contained\" className={classes.button}>\n          Browse a DAO\n        </Button>\n      </CardContent>\n    </Card>\n  </>\n)\n\n// STYLE\nconst styles = ({  }: Theme) =>\n  createStyles({\n    card: {\n      maxWidth: 900,\n      margin: \"auto\",\n      marginTop: 150,\n    },\n    cardContent: {\n      textAlign: \"center\",\n    },\n    header: {\n      margin: 10,\n    },\n    button: {\n      margin: 10,\n    },\n  })\n\nconst componentWithStyles = withStyles(styles)(Home)\n\n// STATE\nconst mapStateToProps = (state: any) => {\n  return {}\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    createDao: () => {\n      dispatch(push(\"/dao-creator\"))\n    },\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(componentWithStyles)\n","import { Action } from \"redux\"\nexport * from \"redux\"\n\nexport interface PayloadAction<TType, TPayload> extends Action<TType> {\n  payload: TPayload\n}\n\n// tslint:disable-next-line:max-line-length\nexport function createAction<TAction extends Action<TAction[\"type\"]>>(\n  type: TAction[\"type\"]\n): () => Action<TAction[\"type\"]> {\n  return () => ({\n    type,\n  })\n}\n\n// tslint:disable-next-line:max-line-length\nexport function createPayloadAction<\n  TAction extends PayloadAction<TAction[\"type\"], TAction[\"payload\"]>\n>(\n  type: TAction[\"type\"]\n): (\n  payload: TAction[\"payload\"]\n) => PayloadAction<TAction[\"type\"], TAction[\"payload\"]> {\n  return (payload: TAction[\"payload\"]) => ({\n    type,\n    payload,\n  })\n}\n","import { Dispatch } from \"redux\"\nimport * as Actions from \"./internal\"\nimport { newNotificationInfo } from \"./notifications\"\nimport * as Arc from \"../../lib/integrations/daoStack/arc\"\nimport { AppState } from \"../../AppState\"\n\nexport default interface DaoCreatorActions {\n  nextStep(): (dispatch: Dispatch) => Promise<void>\n  prevStep(): (dispatch: Dispatch) => Promise<void>\n  setName(name: string): (dispatch: Dispatch) => Promise<void>\n  setTokenName(tokenName: string): (dispatch: Dispatch) => Promise<void>\n  setTokenSymbol(tokenSymbol: string): (dispatch: Dispatch) => Promise<void>\n  addFounder(founder: Arc.Founder): (dispatch: Dispatch) => Promise<void>\n  addScheme(scheme: Arc.Scheme): (dispatch: Dispatch) => Promise<void>\n  remScheme(scheme: Arc.Scheme): (dispatch: Dispatch) => Promise<void>\n  setVotingMachine(\n    votingMachine: Arc.VotingMachineConfiguration\n  ): (dispatch: Dispatch) => Promise<void>\n  createDao(): (dispatch: Dispatch, getState: () => AppState) => Promise<string>\n  setStepIsValide(\n    isValide: boolean\n  ): (dispatch: Dispatch, getState: () => AppState) => Promise<void>\n}\n\nexport function nextStep(): (dispatch: Dispatch) => Promise<void> {\n  return (dispatch: Dispatch) => {\n    dispatch(Actions.daoCreateNextStep())\n    return Promise.resolve()\n  }\n}\n\nexport function prevStep(): (dispatch: Dispatch) => Promise<void> {\n  return (dispatch: Dispatch) => {\n    dispatch(Actions.daoCreatePrevStep())\n    return Promise.resolve()\n  }\n}\n\nexport function setName(name: string): (dispatch: Dispatch) => Promise<void> {\n  return (dispatch: Dispatch) => {\n    dispatch(Actions.daoCreateSetName(name))\n    return Promise.resolve()\n  }\n}\n\nexport function setTokenName(\n  tokenName: string\n): (dispatch: Dispatch) => Promise<void> {\n  return (dispatch: Dispatch) => {\n    dispatch(Actions.daoCreateSetToken(tokenName))\n    return Promise.resolve()\n  }\n}\n\nexport function setTokenSymbol(\n  tokenSymbol: string\n): (dispatch: Dispatch) => Promise<void> {\n  return (dispatch: Dispatch) => {\n    dispatch(Actions.daoCreateSetTokenSym(tokenSymbol))\n    return Promise.resolve()\n  }\n}\n\nexport function addFounder(\n  founder: Arc.Founder\n): (dispatch: Dispatch) => Promise<void> {\n  return (dispatch: Dispatch) => {\n    dispatch(Actions.daoCreateAddFounder(founder))\n    return Promise.resolve()\n  }\n}\n\nexport function addScheme(\n  scheme: Arc.Scheme\n): (dispatch: Dispatch) => Promise<void> {\n  return (dispatch: Dispatch) => {\n    dispatch(Actions.daoCreateAddScheme(scheme))\n    return Promise.resolve()\n  }\n}\n\nexport function remScheme(\n  scheme: Arc.Scheme\n): (dispatch: Dispatch) => Promise<void> {\n  return (dispatch: Dispatch) => {\n    dispatch(Actions.daoCreateRemScheme(scheme))\n    return Promise.resolve()\n  }\n}\n\nexport function setVotingMachine(\n  votingMachineConfiguration: Arc.VotingMachineConfiguration\n): (dispatch: Dispatch) => Promise<void> {\n  return (dispatch: Dispatch) => {\n    dispatch(Actions.daoCreateAddVoteMachine(votingMachineConfiguration))\n    return Promise.resolve()\n  }\n}\n\nexport function createDao(): (\n  dispatch: Dispatch,\n  getState: () => AppState\n) => Promise<string> {\n  return async (dispatch: Dispatch, getState: () => AppState) => {\n    dispatch(\n      Actions.waitingAnimationOpen({\n        type: \"transaction\",\n        message: \"To create the DAO, please sign the upcoming transaction\",\n      })\n    )\n    const {\n      naming,\n      founders,\n      schemes,\n      votingMachineConfiguration,\n    } = getState().daoCreator\n\n    try {\n      const dao = await Arc.createDao(\n        naming,\n        founders,\n        schemes,\n        votingMachineConfiguration\n      )\n      dispatch(Actions.daoCreateSetDeployedDao(dao))\n      dispatch(Actions.daoCreateNextStep())\n      dispatch(Actions.waitingAnimationClose())\n      return Promise.resolve(\"Success!\")\n    } catch (e) {\n      dispatch(Actions.waitingAnimationClose())\n      dispatch(\n        Actions.notificationError(\"Failed to create DAO. Error: \" + e.message)\n      )\n      return Promise.resolve(e.message)\n    }\n  }\n}\n\nexport function setStepIsValide(\n  isValide: boolean\n): (dispatch: Dispatch, getState: () => AppState) => Promise<void> {\n  return (dispatch: Dispatch, getState: () => AppState) => {\n    dispatch(\n      Actions.daoCreateSetStepValidation({\n        step: getState().daoCreator.step,\n        isValide,\n      })\n    )\n    return Promise.resolve()\n  }\n}\n","import typeValidation from \"./typeValidation\"\nimport * as rawWeb3 from \"web3\"\nconst Web3 = rawWeb3 as any\n\nlet web3: any\nif (typeof web3 !== \"undefined\") {\n  web3 = new Web3(web3.currentProvider)\n} else {\n  // TODO: set the provider you want\n  web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:8545\"))\n}\n\nexport const TypeValidation = typeValidation(web3)\n\n/**\n   THIS IS FOR WEB3 V1\n''\nimport Web3 = require(\"web3\")\nimport { Config } from \"../config\"\n\nvar web3 = new Web3(Web3.givenProvider || Config.web3.host)\nconsole.log(\"Web3 version: \" + web3.version)\n**/\n","export default (web3: any) => ({\n  isAddress: (address: string): boolean => {\n    return web3.utils.isAddress(address)\n  },\n\n  isBigNumber: (number: string): boolean => {\n    try {\n      web3.utils.toBN(number)\n      return true\n    } catch {\n      return false\n    }\n  },\n})\n","import { TypeValidation } from \"./integrations/web3\"\nimport * as R from \"ramda\"\n\nexport function checkIfHasError<ValueType>(\n  predicate: (value: ValueType) => boolean,\n  errorMessage: string\n) {\n  return (value: ValueType) => (predicate(value) ? errorMessage : \"\")\n}\n\nconst addressHasError = (addr: string) =>\n  R.isEmpty(addr) || !TypeValidation.isAddress(addr)\n\nconst numberHasError = (number: string) =>\n  R.isEmpty(number) || !TypeValidation.isBigNumber(number)\n\nexport const isRequired = checkIfHasError(R.isEmpty, \"This field is required\")\nexport const isValideAddress = checkIfHasError(\n  addressHasError,\n  \"Please enter a valid address.\"\n)\nexport const isBigNumber = checkIfHasError(\n  numberHasError,\n  \"Please enter a valid number.\"\n)\n","import {\n  Card,\n  CardContent,\n  createStyles,\n  Grid,\n  TextField,\n  Theme,\n  Typography,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\"\nimport * as R from \"ramda\"\nimport * as React from \"react\"\nimport { connect } from \"react-redux\"\nimport { bindActionCreators, Dispatch } from \"redux\"\nimport { AppState } from \"../../AppState\"\nimport * as FormValidation from \"../../lib/formValidation\"\nimport DaoCreatorActions, * as daoCreatorActions from \"../../redux/actions/daoCreator\"\n\ninterface Props extends WithStyles<typeof styles> {\n  daoName: string\n  tokenName: string\n  tokenSymbol: string\n  stepValide: boolean\n  actions: DaoCreatorActions\n}\n\ntype State = {\n  daoName: string\n  tokenName: string\n  tokenSymbol: string\n  formErrors: {\n    daoName: string\n    tokenName: string\n    tokenSymbol: string\n  }\n}\n\nconst requiredFields = [\"daoName\", \"tokenName\", \"tokenSymbol\"]\n\nclass NamingStep extends React.Component<Props, State> {\n  public readonly state: State = {\n    daoName: this.props.daoName,\n    tokenName: this.props.tokenName,\n    tokenSymbol: this.props.tokenSymbol,\n    formErrors: {\n      daoName: \"\",\n      tokenName: \"\",\n      tokenSymbol: \"\",\n    },\n  }\n\n  constructor(props: Props) {\n    super(props)\n    this.props.actions.setStepIsValide(false)\n  }\n\n  handleChange = async (event: any) => {\n    const { name, value } = event.target\n    const errorMessage = FormValidation.isRequired(value)\n\n    await this.setState({\n      formErrors: R.assoc(name, errorMessage, this.state.formErrors),\n      [name]: value,\n    } as any)\n\n    const formHasAllValues = R.none(\n      field => R.isEmpty(R.prop(field, this.state as any)),\n      requiredFields\n    )\n\n    const stepIsValide =\n      formHasAllValues &&\n      R.none(\n        key => !R.isEmpty(this.state.formErrors[key]),\n        R.keys(this.state.formErrors)\n      )\n\n    if (stepIsValide != this.props.stepValide) {\n      await this.props.actions.setStepIsValide(stepIsValide)\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n    const actions = this.props.actions\n\n    const { daoName, tokenName, tokenSymbol, formErrors } = this.state\n\n    return (\n        <Card className={classes.card}>\n            <form>\n                <CardContent>\n                    <Typography variant=\"h4\" className={classes.headline} gutterBottom>\n                        Name the DAO\n                    </Typography>\n                    <Grid container spacing={16}>\n                        <Grid item xs={12} md={5}>\n                            <Typography className={classes.guideText} variant=\"body2\">\n                                Welcome!\n                                <br />\n                                You're about to start the process of creating a DAO\n                                (Decentralized Autonomous Organization).\n                                <br />\n                                <br />\n                                Let's start by giving a name to the DAO and its token.\n                                <br />\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={7}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    className={classes.daoName}\n                                    name=\"daoName\"\n                                    label=\"DAO Name\"\n                                    value={daoName}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    onBlur={() => actions.setName(daoName)}\n                                    fullWidth\n                                    required\n                                    error={!R.isEmpty(formErrors.daoName)}\n                                    helperText={formErrors.daoName}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    className={classes.tokenName}\n                                    name=\"tokenName\"\n                                    label=\"Token Name\"\n                                    value={tokenName}\n                                    onChange={this.handleChange}\n                                    onBlur={() => actions.setTokenName(tokenName)}\n                                    margin=\"normal\"\n                                    fullWidth\n                                    error={!R.isEmpty(formErrors.tokenName)}\n                                    helperText={formErrors.tokenName}\n                                    required\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    className={classes.tokenSymbol}\n                                    name=\"tokenSymbol\"\n                                    label=\"Token Symbol\"\n                                    value={tokenSymbol}\n                                    onChange={this.handleChange}\n                                    onBlur={() => actions.setTokenSymbol(tokenSymbol)}\n                                    margin=\"normal\"\n                                    fullWidth\n                                    error={!R.isEmpty(formErrors.tokenSymbol)}\n                                    helperText={formErrors.tokenSymbol}\n                                    required\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </form>\n        </Card>\n    )\n  }\n}\n\n// STYLE\nconst styles = ({  }: Theme) =>\n  createStyles({\n    card: {},\n    headline: {},\n      daoName: {\n      },\n    tokenName: {},\n    tokenSymbol: {},\n    guideText: {\n        fontSize: 18,\n        maxWidth: 450,\n        paddingLeft: 30,\n        paddingRight:30,\n        paddingTop: 50,\n        paddingBottom: 50, \n        margin: \"auto\",\n    },\n  })\n\nconst componentWithStyles = withStyles(styles)(NamingStep)\n\n// STATE\nconst mapStateToProps = (state: AppState) => {\n  return {\n    daoName: state.daoCreator.naming.daoName,\n    tokenName: state.daoCreator.naming.tokenName,\n    tokenSymbol: state.daoCreator.naming.tokenSymbol,\n    stepValide: state.daoCreator.stepValidation[state.daoCreator.step],\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    actions: bindActionCreators(daoCreatorActions, dispatch),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(componentWithStyles)\n","import * as React from \"react\"\nimport * as R from \"ramda\"\nimport { PieChart as RePieChart, Pie, Tooltip, Cell } from \"recharts\"\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"]\n\nexport type PieChartConfig = {\n  width: number\n  hight: number\n  dataKey: string\n  nameKey: string\n}\n\nexport type Props = {\n  data: any[]\n  config: PieChartConfig\n}\n\nconst PieChart: React.SFC<Props> = ({ data, config }) => {\n  return (\n    <RePieChart\n      style={{ margin: \"auto\" }}\n      width={config.width}\n      height={config.hight}\n    >\n      <Pie\n        dataKey={(dataObject: any) => parseInt(dataObject[config.dataKey])}\n        nameKey={config.nameKey}\n        data={data}\n        labelLine={false}\n        label={renderCustomizedLabel}\n      >\n        {data.map((entry, index) => (\n          <Cell key={\"cell-\" + index} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n      <Tooltip />\n    </RePieChart>\n  )\n}\n\nconst RADIAN = Math.PI / 180\n\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  name,\n  index,\n}: any) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5\n  const x = cx + radius * Math.cos(-midAngle * RADIAN)\n  const y = cy + radius * Math.sin(-midAngle * RADIAN)\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`...${R.take(5, name)} - ${(percent * 100).toFixed(0)}%`}\n    </text>\n  )\n}\n\nexport default PieChart\n","import * as React from \"react\"\nimport Blockies from \"react-blockies\"\nexport type Props = {\n  address: string\n}\n\nconst EthAddressAvatar: React.SFC<Props> = ({ address }) => {\n  return <Blockies seed={address} />\n}\n\nexport default EthAddressAvatar\n","import * as R from \"ramda\"\nimport * as React from \"react\"\nimport {\n  withStyles,\n  Typography,\n  Theme,\n  WithStyles,\n  createStyles,\n  Grid,\n  TextField,\n  Card,\n  Button,\n  CardContent,\n} from \"@material-ui/core\"\nimport { bindActionCreators, Dispatch } from \"redux\"\nimport { connect } from \"react-redux\"\nimport { Founder } from \"../../lib/integrations/daoStack/arc\"\nimport * as FormValidation from \"../../lib/formValidation\"\nimport DaoCreatorActions, * as daoCreatorActions from \"../../redux/actions/daoCreator\"\nimport PieChart from \"../../lib/integrations/charts\"\nimport EthAddressAvatar from \"../../lib/integrations/ethAddressAvatar\"\n\ninterface Props extends WithStyles<typeof styles> {\n  addedFounders: Founder[]\n  actions: DaoCreatorActions\n}\n\ntype State = Founder & {\n  formErrors: {\n    address: string\n    tokens: string\n    reputation: string\n  }\n  formIsValide: boolean\n}\n\nconst initState: State = {\n  address: \"\",\n  tokens: \"\",\n  reputation: \"\",\n  formErrors: {\n    address: \"\",\n    tokens: \"\",\n    reputation: \"\",\n  },\n  formIsValide: false,\n}\n\nconst requiredFields = [\"address\", \"tokens\", \"reputation\"]\n\nclass FoundersStep extends React.Component<Props, State> {\n  state: Readonly<State> = initState\n\n  constructor(props: Props) {\n    super(props)\n    this.props.actions.setStepIsValide(false)\n  }\n\n  handleChange = async (event: any) => {\n    const { name, value } = event.target\n    let errorMessage = \"\"\n\n    const founderAlreadyPresent = (addr: string) =>\n      R.any(({ address }) => R.equals(address, addr), this.props.addedFounders)\n\n    switch (name) {\n      case \"address\": {\n        errorMessage = FormValidation.checkIfHasError(\n          founderAlreadyPresent,\n          \"Error: Founder already added.\"\n        )(value)\n        if (R.isEmpty(errorMessage)) {\n          errorMessage = FormValidation.isValideAddress(value)\n        }\n        break\n      }\n      case \"tokens\": {\n        errorMessage = FormValidation.isBigNumber(value)\n        break\n      }\n      case \"reputation\": {\n        errorMessage = FormValidation.isBigNumber(value)\n        break\n      }\n    }\n    await this.setState({\n      formErrors: R.assoc(name, errorMessage, this.state.formErrors),\n      [name]: value,\n    } as any)\n\n    const formHasAllValues = R.none(\n      field => R.isEmpty(R.prop(field, this.state as any)),\n      requiredFields\n    )\n\n    const formIsValide =\n      formHasAllValues &&\n      R.none(\n        key => !R.isEmpty(this.state.formErrors[key]),\n        R.keys(this.state.formErrors)\n      )\n\n    this.setState({ formIsValide })\n  }\n\n  onAddFounder = () => {\n    this.props.actions.addFounder(this.state)\n    this.setState(initState)\n\n    this.props.actions.setStepIsValide(true)\n  }\n\n  render() {\n    const { classes, addedFounders } = this.props\n\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography variant=\"h4\" className={classes.headline} gutterBottom>\n            Add Founders\n          </Typography>\n          <Grid container spacing={16}>\n            <Grid item xs={12} md={5}>\n              <Typography className={classes.guideText} variant=\"body2\">\n                Here we specify the initial reputation and token distribution in\n                the DAO.\n                <br />\n                <br />\n                We do this by specifying the addresses together with the amount\n                of reputation and tokens for each address.\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <Typography\n                variant=\"h6\"\n                className={classes.pieChartHeadlines}\n                gutterBottom\n              >\n                Reputation Distribution\n              </Typography>\n              <PieChart\n                data={addedFounders}\n                config={{\n                  hight: 240,\n                  width: 240,\n                  dataKey: \"reputation\",\n                  nameKey: \"address\",\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <Typography\n                variant=\"h6\"\n                className={classes.pieChartHeadlines}\n                gutterBottom\n              >\n                Tokens Distribution\n              </Typography>\n              <PieChart\n                data={addedFounders}\n                config={{\n                  hight: 240,\n                  width: 240,\n                  dataKey: \"tokens\",\n                  nameKey: \"address\",\n                }}\n              />\n            </Grid>\n            <Grid container spacing={16} className={classes.addLine}>\n              <Grid item xs={6}>\n                <TextField\n                  name=\"address\"\n                  label=\"Wallet Address\"\n                  margin=\"normal\"\n                  onChange={this.handleChange}\n                  value={this.state.address}\n                  fullWidth\n                  error={!R.isEmpty(this.state.formErrors.address)}\n                  helperText={this.state.formErrors.address}\n                  required\n                />\n              </Grid>\n              <Grid item xs={2}>\n                <TextField\n                  name=\"reputation\"\n                  label=\"Reputation\"\n                  margin=\"normal\"\n                  onChange={this.handleChange}\n                  value={this.state.reputation}\n                  fullWidth\n                  error={!R.isEmpty(this.state.formErrors.reputation)}\n                  helperText={this.state.formErrors.reputation}\n                  required\n                />\n              </Grid>\n              <Grid item xs={2}>\n                <TextField\n                  name=\"tokens\"\n                  label=\"Tokens\"\n                  margin=\"normal\"\n                  onChange={this.handleChange}\n                  value={this.state.tokens}\n                  fullWidth\n                  error={!R.isEmpty(this.state.formErrors.tokens)}\n                  helperText={this.state.formErrors.tokens}\n                  required\n                />\n              </Grid>\n              <Grid item xs={1} className={classes.addButtonWrapper}>\n                <Button\n                  onClick={this.onAddFounder}\n                  className={classes.addButton}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  aria-label=\"Add\"\n                  disabled={!this.state.formIsValide}\n                >\n                  Add\n                </Button>\n              </Grid>\n            </Grid>\n            {R.map(this.addedFounder, addedFounders)}\n          </Grid>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  addedFounder = ({ address, reputation, tokens }: Founder) => (\n    <Grid container spacing={16} key={`founder-${address}`}>\n      <Grid item xs={1}>\n        <EthAddressAvatar address={address} />\n      </Grid>\n      <Grid item xs={7}>\n        <Typography>{address}</Typography>\n      </Grid>\n      <Grid item xs={2}>\n        <Typography>{reputation}</Typography>\n      </Grid>\n      <Grid item xs={2}>\n        <Typography>{tokens}</Typography>\n      </Grid>\n    </Grid>\n  )\n}\n\n// STYLE\nconst styles = (theme: Theme) =>\n  createStyles({\n    header: {},\n    card: {},\n    addButton: {},\n    addLine: {\n      marginBottom: 10,\n      justifyContent: \"center\",\n    },\n    addButtonWrapper: {\n      marginTop: \"auto\",\n      marginRight: theme.spacing.unit,\n    },\n    subheader: {},\n    headline: {},\n    pieChartHeadlines: { textAlign: \"center\" },\n    guideText: {\n      fontSize: 18,\n      maxWidth: 450,\n      paddingLeft: 30,\n      paddingRight: 30,\n      paddingTop: 50,\n      paddingBottom: 50,\n      margin: \"auto\",\n    },\n  })\n\nconst componentWithStyles = withStyles(styles)(FoundersStep)\n\n// STATE\nconst mapStateToProps = (state: any) => {\n  return {\n    addedFounders: state.daoCreator.founders,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    actions: bindActionCreators(daoCreatorActions, dispatch),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(componentWithStyles)\n","import {\n  Card,\n  CardContent,\n  createStyles,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Switch,\n  Theme,\n  Typography,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\"\nimport * as R from \"ramda\"\nimport * as React from \"react\"\nimport { connect } from \"react-redux\"\nimport { bindActionCreators, Dispatch } from \"redux\"\nimport { AppState } from \"../../AppState\"\nimport { Scheme } from \"../../lib/integrations/daoStack/arc\"\nimport { schemes } from \"../../lib/integrations/daoStack/arc/schemes\"\nimport DaoCreatorActions, * as daoCreatorActions from \"../../redux/actions/daoCreator\"\n\ninterface Props extends WithStyles<typeof styles> {\n  addedSchemes: Scheme[]\n  actions: DaoCreatorActions\n}\n\nconst AddScheme: React.SFC<Props> = ({ classes, addedSchemes, actions }) => {\n  const handleChange = (scheme: Scheme) => (event: any) => {\n    R.contains(scheme, addedSchemes) === true\n      ? actions.remScheme(scheme)\n      : actions.addScheme(scheme)\n  }\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant=\"h4\" className={classes.headline} gutterBottom>\n          Select Features\n        </Typography>\n        <Grid container spacing={16}>\n          <Grid item xs={12} md={5}>\n            <Typography className={classes.guideText} variant=\"body2\">\n              Let's select the features for the DAO at creation time.\n              <br />\n              <br />\n              If the \"Feature Registrar\" flag is turned on, it will be possible\n              to add and remove features at any time after the DAO is created.\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={7}>\n            <List>\n              {R.map(scheme => {\n                return (\n                  <ListItem key={`list-itiem-${scheme.typeName}`}>\n                    <Switch\n                      checked={R.contains(scheme, addedSchemes)}\n                      onChange={handleChange(scheme)}\n                      value={scheme.typeName}\n                    />\n                    <ListItemText\n                      primary={scheme.displayName}\n                      secondary={scheme.description}\n                    />\n                  </ListItem>\n                )\n              }, schemes)}\n            </List>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  )\n}\n\n// STYLE\nconst styles = ({  }: Theme) =>\n  createStyles({\n    header: {},\n    card: {},\n    addButton: {},\n    subheader: {},\n    headline: {},\n    guideText: {\n      fontSize: 18,\n      maxWidth: 450,\n      paddingLeft: 30,\n      paddingRight: 30,\n      paddingTop: 50,\n      paddingBottom: 50,\n      margin: \"auto\",\n    },\n  })\n\nconst componentWithStyles = withStyles(styles)(AddScheme)\n\n// STATE\nconst mapStateToProps = (state: AppState) => {\n  return {\n    addedSchemes: state.daoCreator.schemes,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    actions: bindActionCreators(daoCreatorActions, dispatch),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(componentWithStyles)\n","import {\n  TextField,\n  Card,\n  CardContent,\n  createStyles,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  Grid,\n  MenuItem,\n  Paper,\n  Select,\n  Theme,\n  Typography,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\"\nimport * as R from \"ramda\"\nimport * as React from \"react\"\nimport { connect } from \"react-redux\"\nimport { bindActionCreators, Dispatch } from \"redux\"\nimport { AppState } from \"../../AppState\"\nimport {\n  VotingMachine,\n  votingMachines,\n  VotingMachineConfiguration,\n} from \"../../lib/integrations/daoStack/arc\"\nimport DaoCreatorActions, * as daoCreatorActions from \"../../redux/actions/daoCreator\"\n\ninterface Props extends WithStyles<typeof styles> {\n  currentVotingMachineConfiguration: VotingMachineConfiguration\n  actions: DaoCreatorActions\n}\n\ntype State = {\n  formErrors: {}\n}\n\nconst initState: State = {\n  // TODO: this doesn't have a type, and isn't being used...\n  //       this can be fixed with a generalized form component\n  // - pass in array of { name, type, desc, errTxt, onchange, drawOverride? }\n  //   - just use the forms package instead?\n  // - fix the types first though, then work on the forms\n  formErrors: {},\n}\n\nconst getVotingMachineDefaultParams = (typeName: string): any => {\n  const votingMachine = R.find(\n    votingMachine => votingMachine.typeName === typeName,\n    votingMachines\n  ) as VotingMachine\n\n  return R.reduce(\n    (acc, param) => R.assoc(param.typeName, param.defaultValue, acc),\n    {},\n    votingMachine.params\n  )\n}\n\nclass VotingStep extends React.Component<Props, State> {\n  public readonly state: State = {\n    ...initState,\n    ...getVotingMachineDefaultParams(\n      this.props.currentVotingMachineConfiguration.typeName\n    ),\n  }\n\n  handleChange = async (event: any) => {\n    const { name, value } = event.target\n\n    await this.setState({\n      [name]: value,\n    } as any)\n  }\n\n  render() {\n    const { classes, currentVotingMachineConfiguration, actions } = this.props\n    const currentVotingMachine = R.find(\n      votingMachine =>\n        votingMachine.typeName === currentVotingMachineConfiguration.typeName,\n      votingMachines\n    ) as VotingMachine\n\n    return (\n      <Card className={classes.card}>\n        <form>\n          <CardContent>\n            <Typography variant=\"h4\" className={classes.headline} gutterBottom>\n              Configure Voting\n            </Typography>\n            <Grid container spacing={16}>\n              <Grid item xs={12} md={5}>\n                <Typography className={classes.guideText} variant=\"body2\">\n                  What type of voting should the DAO support? Votes are used to\n                  form consensus on proposals, determining if they will pass or\n                  fail. <br />\n                  <br />\n                  Select different voting mechanism to learn more.\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={7}>\n                <Grid item xs={12} md={7}>\n                  <FormControl>\n                    <FormGroup>\n                      <FormControl>\n                        <Select\n                          onChange={async (event: any) => {\n                            await this.setState(\n                              getVotingMachineDefaultParams(event.target.value)\n                            )\n\n                            actions.setVotingMachine({\n                              typeName: event.target.value,\n                              params: R.omit([\"formErrors\"], this.state),\n                            })\n                          }}\n                          value={currentVotingMachine.typeName}\n                          inputProps={{\n                            name: \"votingMachine\",\n                            id: \"voting-machine\",\n                          }}\n                        >\n                          {R.map(votingMachine => {\n                            return (\n                              <MenuItem\n                                key={`voting-machine-select-${\n                                  votingMachine.typeName\n                                }`}\n                                value={votingMachine.typeName}\n                              >\n                                {votingMachine.displayName}\n                              </MenuItem>\n                            )\n                          }, votingMachines)}\n                        </Select>\n                      </FormControl>\n                    </FormGroup>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography\n                    gutterBottom\n                    className={classes.votingMachineDescription}\n                  >\n                    {currentVotingMachine.description}\n                  </Typography>\n                  <Typography variant=\"h6\">Configuration parameters</Typography>\n                  {R.map(\n                    param => (\n                      <Grid item xs={12} key={`text-field-${param.typeName}`}>\n                        <TextField\n                          name={param.typeName}\n                          label={param.displayName}\n                          margin=\"normal\"\n                          onChange={this.handleChange}\n                          value={R.prop(param.typeName, this.state as any)}\n                          onBlur={() =>\n                            actions.setVotingMachine({\n                              typeName: currentVotingMachine.typeName,\n                              params: R.omit([\"formErrors\"], this.state),\n                            })\n                          }\n                          fullWidth\n                          error={\n                            R.has(param.typeName, this.state.formErrors) &&\n                            !R.isEmpty(\n                              R.prop(param.typeName, this.state\n                                .formErrors as any)\n                            )\n                          }\n                          helperText={R.prop(param.typeName, this.state\n                            .formErrors as any)}\n                          required={!R.pathOr(false, [\"optional\"], param)}\n                        />\n                        <Typography gutterBottom>\n                          <i>{param.description}</i>\n                        </Typography>\n                      </Grid>\n                    ),\n                    currentVotingMachine.params\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </form>\n      </Card>\n    )\n  }\n}\n\n// STYLE\nconst styles = ({  }: Theme) =>\n  createStyles({\n    card: {},\n    headline: {},\n    daoName: {},\n    tokenName: {},\n    tokenSymbol: {},\n    votingMachineDescription: {\n      marginBottom: 25,\n      fontSize: 16,\n    },\n    guideText: {\n      fontSize: 18,\n      maxWidth: 450,\n      paddingLeft: 30,\n      paddingRight: 30,\n      paddingTop: 50,\n      paddingBottom: 50,\n      margin: \"auto\",\n    },\n  })\n\nconst componentWithStyles = withStyles(styles)(VotingStep)\n\n// STATE\nconst mapStateToProps = (state: AppState) => {\n  return {\n    currentVotingMachineConfiguration:\n      state.daoCreator.votingMachineConfiguration,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    actions: bindActionCreators(daoCreatorActions, dispatch),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(componentWithStyles)\n","import * as R from \"ramda\"\nimport {\n  Card,\n  CardContent,\n  createStyles,\n  Grid,\n  Theme,\n  Typography,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\"\nimport * as React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Dispatch } from \"redux\"\nimport {\n  Founder,\n  Scheme,\n  VotingMachine,\n  votingMachines,\n  VotingMachineConfiguration,\n} from \"../../lib/integrations/daoStack/arc\"\nimport EthAddressAvatar from \"../../lib/integrations/ethAddressAvatar\"\n\ninterface Props extends WithStyles<typeof styles> {\n  daoName: string\n  tokenName: string\n  tokenSymbol: string\n  founders: Founder[]\n  schemes: Scheme[]\n  votingMachineConfiguration: VotingMachineConfiguration\n  stepNumber: number\n  stepValide: boolean\n}\n\nconst ReviewStep: React.SFC<Props> = ({\n  daoName,\n  tokenName,\n  tokenSymbol,\n  founders,\n  schemes,\n  votingMachineConfiguration,\n  stepNumber,\n  stepValide,\n  classes,\n}) => {\n  const votingMachine = R.find(\n    votingMachine =>\n      votingMachine.typeName === votingMachineConfiguration.typeName,\n    votingMachines\n  ) as VotingMachine\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant=\"h4\" className={classes.headline} gutterBottom>\n          Review the DAO\n        </Typography>\n        <Grid container spacing={16}>\n          <Grid item xs={12} md={5}>\n            <Typography className={classes.guideText} variant=\"body2\">\n              Look over this summary of the DAO you are about to create\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={7} />\n          <Grid item xs={12} md={5}>\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h5\"\n                className={classes.headline}\n                gutterBottom\n              >\n                Naming\n              </Typography>\n              <Typography>\n                <b>DAO Name:</b> {daoName}\n              </Typography>\n              <Typography>\n                <b>Token Name:</b> {tokenName}\n              </Typography>\n              <Typography>\n                <b>Token Symbol:</b> {tokenSymbol}\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h5\"\n                className={classes.headline}\n                gutterBottom\n              >\n                Voting\n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {votingMachine.displayName}\n              </Typography>\n              <Typography>\n                <i>{votingMachine.description}</i>\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} md={7}>\n            <Grid item xs={12}>\n              <Typography\n                variant=\"h5\"\n                className={classes.headline}\n                gutterBottom\n              >\n                Features\n              </Typography>\n              {R.map(displayScheme, schemes)}\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\" className={classes.headline} gutterBottom>\n              Founders\n            </Typography>\n            <Grid container spacing={16} key={`founder-headline`}>\n                <Grid item xs={1}/>\n              <Grid item xs={7}>\n                <Typography>\n                  <b>Address</b>\n                </Typography>\n              </Grid>\n              <Grid item xs={2}>\n                <Typography>\n                  <b>Reputation</b>\n                </Typography>\n              </Grid>\n              <Grid item xs={2}>\n                <Typography>\n                  <b>Tokens</b>\n                </Typography>\n              </Grid>\n            </Grid>\n            {R.map(displayFounder, founders)}\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst displayFounder = ({ address, reputation, tokens }: Founder) => (\n  <Grid container spacing={16} key={`founder-${address}`}>\n      <Grid item xs={1}>\n          <EthAddressAvatar address={address} />\n      </Grid>\n    <Grid item xs={7}>\n      <Typography>{address}</Typography>\n    </Grid>\n    <Grid item xs={2}>\n      <Typography>{reputation}</Typography>\n    </Grid>\n    <Grid item xs={2}>\n      <Typography>{tokens}</Typography>\n    </Grid>\n  </Grid>\n)\n\nconst displayScheme = ({ displayName, description, typeName }: Scheme) => (\n  <Grid container spacing={16} key={`founder-${typeName}`}>\n    <Grid item xs={12}>\n      <Typography variant=\"subtitle1\">{displayName}</Typography>\n      <Typography>\n        <i>{description}</i>\n      </Typography>\n    </Grid>\n  </Grid>\n)\n\n// STYLE\nconst styles = ({  }: Theme) =>\n  createStyles({\n    card: {},\n    headline: {\n      paddingTop: 20,\n    },\n    daoName: {},\n    tokenName: {},\n    tokenSymbol: {},\n    guideText: {\n      fontSize: 18,\n      maxWidth: 450,\n      addingTop: 50,\n      paddingBottom: 20,\n    },\n  })\n\nconst componentWithStyles = withStyles(styles)(ReviewStep)\n\n// STATE\nconst mapStateToProps = (state: any) => {\n  return {\n    daoName: state.daoCreator.naming.daoName,\n    tokenName: state.daoCreator.naming.tokenName,\n    tokenSymbol: state.daoCreator.naming.tokenSymbol,\n    founders: state.daoCreator.founders,\n    schemes: state.daoCreator.schemes,\n    votingMachineConfiguration: state.daoCreator.votingMachineConfiguration,\n    stepNumber: state.daoCreator.step,\n    stepValide: state.daoCreator.stepValidation[state.daoCreator.step],\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {}\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(componentWithStyles)\n","import {\n  Card,\n  CardContent,\n  createStyles,\n  Grid,\n  Theme,\n  Typography,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\"\nimport * as React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Dispatch } from \"redux\"\nimport { AppState } from \"../../AppState\"\nimport { Founder, Scheme, DAO } from \"../../lib/integrations/daoStack/arc\"\n\ninterface Props extends WithStyles<typeof styles> {\n  dao: DAO | undefined\n}\n\nconst LiveDaoStep: React.SFC<Props> = ({ dao, classes }) => {\n  if (dao == null) {\n    return (\n      <Typography variant=\"h5\" className={classes.headline} gutterBottom>\n        No DAO\n      </Typography>\n    )\n  } else {\n    const {\n      name,\n      tokenName,\n      tokenSymbol,\n      avatarAddress,\n      controllerAddress,\n    } = dao\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <Typography variant=\"h4\" className={classes.headline} gutterBottom>\n                    Live DAO\n                </Typography>\n                <Grid container spacing={16}>\n                    <Grid item xs={12} md={5}>\n                        <Typography className={classes.guideText} variant=\"body2\">\n                            Hurray! Your DAO is deployed!\n                            <br/>\n                            Here are some useful information about it.\n                            <br />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={7}>\n                        <Typography\n                            variant=\"h5\"\n                            className={classes.headline}\n                            gutterBottom\n                        >\n                            DAO\n                        </Typography>\n                        <Typography>\n                            <b>Name:</b> {name}\n                        </Typography>\n                        <Typography>\n                            <b>Token Name:</b> {tokenName}\n                        </Typography>\n                        <Typography>\n                            <b>Token Symbol:</b> {tokenSymbol}\n                        </Typography>\n                        <Typography\n                            variant=\"h5\"\n                            className={classes.headline}\n                            gutterBottom\n                        >\n                            Locations\n                        </Typography>\n                        <Typography>\n                            <b>Avatar address:</b> {avatarAddress}\n                        </Typography>\n                        <Typography>\n                            <b>Controller address:</b> {controllerAddress}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    )\n  }\n}\nconst displayFounder = ({ address, reputation, tokens }: Founder) => (\n  <Grid container spacing={16} key={`founder-${address}`}>\n    <Grid item xs={6}>\n      <Typography>{address}</Typography>\n    </Grid>\n    <Grid item xs={2}>\n      <Typography>{reputation}</Typography>\n    </Grid>\n    <Grid item xs={2}>\n      <Typography>{tokens}</Typography>\n    </Grid>\n  </Grid>\n)\n\nconst displayScheme = ({ displayName, description, typeName }: Scheme) => (\n  <Grid container spacing={16} key={`founder-${typeName}`}>\n    <Grid item xs={12}>\n      <Typography variant=\"subtitle1\">{displayName}</Typography>\n      <Typography>\n        <i>{description}</i>\n      </Typography>\n    </Grid>\n  </Grid>\n)\n\n// STYLE\nconst styles = ({  }: Theme) =>\n  createStyles({\n    card: {},\n    headline: {},\n    daoName: {},\n    tokenName: {},\n    tokenSymbol: {},\n    guideText: {\n      fontSize: 18,\n      maxWidth: 450,\n      paddingLeft: 30,\n      paddingRight: 30,\n      paddingTop: 50,\n      paddingBottom: 50,\n      margin: \"auto\",\n    },\n  })\n\nconst componentWithStyles = withStyles(styles)(LiveDaoStep)\n\n// STATE\nconst mapStateToProps = (state: AppState) => {\n  return {\n    dao: state.daoCreator.deployedDao,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {}\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(componentWithStyles)\n","import * as React from \"react\"\nimport { connect } from \"react-redux\"\nimport { bindActionCreators, Dispatch } from \"redux\"\nimport {\n  withStyles,\n  Theme,\n  WithStyles,\n  createStyles,\n  Stepper,\n  Step,\n  StepLabel,\n  Button,\n} from \"@material-ui/core\"\nimport DaoCreatorActions, * as daoCreatorActions from \"../../redux/actions/daoCreator\"\nimport NamingStep from \"./NamingStep\"\nimport FoundersStep from \"./FoundersStep\"\nimport FeatureStep from \"./FeaturesStep\"\nimport VotingStep from \"./VotingStep\"\nimport ReviewStep from \"./ReviewStep\"\nimport LiveDao from \"./LiveDao\"\nimport { AppState } from \"../../AppState\"\n\ninterface Props extends WithStyles<typeof styles> {\n  step: number\n  stepValide: boolean\n  actions: DaoCreatorActions\n}\n\nconst daoCreator: React.SFC<Props> = ({\n  classes,\n  step,\n  stepValide,\n  actions,\n}) => {\n  const steps = [\n    {\n      title: \"Name\",\n      component: <NamingStep />,\n    },\n    {\n      title: \"Founders\",\n      component: <FoundersStep />,\n    },\n    {\n      title: \"Features\",\n      component: <FeatureStep />,\n    },\n    {\n      title: \"Voting\",\n      component: <VotingStep />,\n    },\n    {\n      title: \"Review & Deploy\",\n      component: <ReviewStep />,\n    },\n    {\n      title: \"Live DAO\",\n      component: <LiveDao />,\n    },\n  ]\n\n  const isDeployStep = step === steps.length - 2\n  const isLastStep = step === steps.length - 1\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={step}>\n        {steps.map(thisStep => (\n          <Step key={thisStep.title}>\n            <StepLabel>{thisStep.title}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        <div>\n          <div className={classes.content}>{steps[step].component}</div>\n          {isLastStep ? (\n            <></>\n          ) : (\n            <div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={step === 0}\n                onClick={actions.prevStep}\n                className={classes.button}\n              >\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={isDeployStep ? actions.createDao : actions.nextStep}\n                className={classes.button}\n                disabled={!stepValide}\n              >\n                {isDeployStep ? \"Deploy DAO\" : \"Next\"}\n              </Button>\n            </div>\n          )}\n        </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\n// STYLE\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"90%\",\n      height: \"200\",\n      margin: \"auto\",\n    },\n    button: {\n      marginRight: theme.spacing.unit,\n      backgroundColor: \"rgba(167, 167, 167, 0.77)!important\", //TODO: find out why desabled buttons disapper, then fix it and remove this\n    },\n    content: {\n      marginTop: theme.spacing.unit,\n      marginBottom: theme.spacing.unit,\n    },\n  })\n\nconst componentWithStyles = withStyles(styles)(daoCreator)\n\n// STATE\nconst mapStateToProps = (state: AppState, ownProps: any) => {\n  return {\n    step: state.daoCreator.step,\n    stepValide: state.daoCreator.stepValidation[state.daoCreator.step],\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    actions: bindActionCreators(daoCreatorActions, dispatch),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(componentWithStyles)\n","import { Dispatch } from \"redux\"\nimport * as Actions from \"./internal\"\n\nexport default interface NotificationActions {\n  newNotificationInfo(message: string): (dispatch: Dispatch) => Promise<void>\n  newNotificationError(message: string): (dispatch: Dispatch) => Promise<void>\n  closeNotification(): (dispatch: Dispatch) => Promise<void>\n}\n\nexport function newNotificationInfo(\n  message: string\n): (dispatch: Dispatch) => Promise<void> {\n  return (dispatch: Dispatch) => {\n    dispatch(Actions.notificationInfo(message))\n    return Promise.resolve()\n  }\n}\n\nexport function newNotificationError(\n  message: string\n): (dispatch: Dispatch) => Promise<void> {\n  return (dispatch: Dispatch) => {\n    dispatch(Actions.notificationError(message))\n    return Promise.resolve()\n  }\n}\n\nexport function closeNotification(): (dispatch: Dispatch) => Promise<void> {\n  return (dispatch: Dispatch) => {\n    dispatch(Actions.NotificationClose())\n    return Promise.resolve()\n  }\n}\n","import * as React from \"react\"\nimport { Dispatch } from \"redux\"\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport {\n  withStyles,\n  Snackbar,\n  SnackbarContent,\n  Theme,\n  WithStyles,\n  createStyles,\n} from \"@material-ui/core\"\nimport NotificationActions, * as notificationActions from \"../redux/actions/notifications\"\nimport { AppState } from \"../AppState\"\n\ninterface Props extends WithStyles<typeof styles> {\n  message: string\n  type: \"error\" | \"info\"\n  open: boolean\n  actions: NotificationActions\n}\n\nconst Notifications: React.SFC<Props> = ({\n  message,\n  type,\n  open,\n  actions,\n  classes,\n}) => (\n  <Snackbar\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"left\",\n    }}\n    open={open}\n    autoHideDuration={10000}\n    onClose={async () => await actions.closeNotification()}\n    ContentProps={{\n      \"aria-describedby\": \"message-id\",\n    }}\n  >\n    <SnackbarContent\n      className={classes[type]}\n      message={<span id=\"message-id\">{message}</span>}\n    />\n  </Snackbar>\n)\n\n// STYLE\nconst styles = ({ palette }: Theme) =>\n  createStyles({\n    error: {\n      backgroundColor: palette.error.dark,\n    },\n    info: {\n      backgroundColor: palette.primary.dark,\n    },\n  })\n\nconst componentWithStyles = withStyles(styles)(Notifications)\n\n// STATE\nconst mapStateToProps = (state: AppState, { match }: any) => {\n  return {\n    message: state.notification.message,\n    type: state.notification.type,\n    open: state.notification.open,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    actions: bindActionCreators(notificationActions, dispatch),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(componentWithStyles)\n","import * as React from \"react\"\nimport { Dispatch } from \"redux\"\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport {\n  CircularProgress,\n  DialogContent,\n  withStyles,\n  Theme,\n  Dialog,\n  DialogTitle,\n  WithStyles,\n  createStyles,\n} from \"@material-ui/core\"\nimport { AppState } from \"../AppState\"\n\ninterface Props extends WithStyles<typeof styles> {\n  message: string\n  type?: \"transaction\"\n  open: boolean\n}\n\nconst WaitingAnmination: React.SFC<Props> = ({ message, open, classes }) => (\n  <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\n    <DialogTitle id=\"simple-dialog-title\">{message}</DialogTitle>\n    <DialogContent className={classes.dialogContent}>\n      <CircularProgress size={200} />\n    </DialogContent>\n  </Dialog>\n)\n\n// STYLE\nconst styles = ({ palette }: Theme) =>\n  createStyles({ dialogContent: { textAlign: \"center\" } })\n\nconst componentWithStyles = withStyles(styles)(WaitingAnmination)\n\n// STATE\nconst mapStateToProps = (state: AppState, { match }: any) => {\n  return {\n    message: state.waitingAnimation.message,\n    type: state.waitingAnimation.type,\n    open: state.waitingAnimation.open,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {}\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(componentWithStyles)\n","import * as React from \"react\"\nimport { SFC } from \"react\"\nimport { Route, Switch } from \"react-router\"\n\nimport Layout from \"./components/Layout\"\nimport Home from \"./components/Home\"\nimport DaoCreator from \"./components/DaoCreator\"\nimport Notifications from \"./components/Notifications\"\nimport WaitingAnimation from \"./components/WaitingAnimation\"\n\n// TEMP\nimport NamingStep from \"./components/DaoCreator/NamingStep\"\nimport FoundersStep from \"./components/DaoCreator/FoundersStep\"\nimport FeaturesStep from \"./components/DaoCreator/FeaturesStep\"\nimport VotingStep from \"./components/DaoCreator/VotingStep\"\nimport ReviewStep from \"./components/DaoCreator/ReviewStep\"\n\nconst App: SFC = () => (\n  <Layout>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/dao-creator\" component={DaoCreator} />\n      <Route exact path=\"/dao-creator/naming\" component={NamingStep} />\n      <Route exact path=\"/dao-creator/founders\" component={FoundersStep} />\n      <Route exact path=\"/dao-creator/features\" component={FeaturesStep} />\n      <Route exact path=\"/dao-creator/voting\" component={VotingStep} />\n      <Route exact path=\"/dao-creator/review\" component={ReviewStep} />\n    </Switch>\n    <WaitingAnimation />\n    <Notifications />\n  </Layout>\n)\n\nexport default App\n","import { Actions, AnyAction } from \"../../redux/actions\"\nimport { NotificationState } from \"../../AppState\"\n\nconst initialState: NotificationState = {\n  message: \"\",\n  type: \"info\",\n  open: false,\n}\n\nexport const reducer = (\n  state: NotificationState = initialState,\n  action: AnyAction\n): NotificationState => {\n  switch (action.type) {\n    case Actions.NOTIFICATION_INFO:\n      return { message: action.payload, type: \"info\", open: true }\n    case Actions.NOTIFICATION_ERROR:\n      return { message: action.payload, type: \"error\", open: true }\n    case Actions.NOTIFICATION_CLOSE:\n      return { message: \"\", type: \"info\", open: false }\n    default:\n      return state\n  }\n}\n","import * as R from \"ramda\"\nimport { Actions, AnyAction } from \"../../redux/actions\"\nimport { DaoCreatorState } from \"../../AppState\"\nimport { votingMachines, schemes } from \"../../lib/integrations/daoStack/arc\"\n\nconst initialState: DaoCreatorState = {\n  step: 0,\n  stepValidation: [true],\n  naming: {\n    daoName: \"\",\n    tokenName: \"\",\n    tokenSymbol: \"\",\n  },\n  founders: [],\n  schemes: R.filter(scheme => scheme.toggleDefault, schemes),\n  votingMachineConfiguration: {\n    typeName: votingMachines[0].typeName,\n    params: {},\n  },\n  deployedDao: undefined,\n}\n\nexport const reducer = (\n  state: DaoCreatorState = initialState,\n  action: AnyAction\n): DaoCreatorState => {\n  switch (action.type) {\n    case Actions.DAO_CREATE_NEXT_STEP: {\n      const newStep = state.step + 1\n      return R.merge(state, {\n        step: newStep,\n        stepValidation:\n          state.stepValidation.length >= newStep + 1\n            ? state.stepValidation\n            : R.append(true, state.stepValidation),\n      })\n    }\n    case Actions.DAO_CREATE_PREV_STEP:\n      return R.merge(state, { step: state.step - 1 })\n    case Actions.DAO_CREATE_SET_NAME:\n      return R.merge(state, {\n        naming: R.merge(state.naming, { daoName: action.payload }),\n      })\n    case Actions.DAO_CREATE_SET_TOKEN:\n      return R.merge(state, {\n        naming: R.merge(state.naming, { tokenName: action.payload }),\n      })\n    case Actions.DAO_CREATE_SET_TOKEN_SYM:\n      return R.merge(state, {\n        naming: R.merge(state.naming, { tokenSymbol: action.payload }),\n      })\n    case Actions.DAO_CREATE_ADD_FOUNDER:\n      return R.merge(state, {\n        founders: R.append(action.payload, state.founders),\n      })\n    case Actions.DAO_CREATE_ADD_SCHEME:\n      return R.merge(state, {\n        schemes: R.append(action.payload, state.schemes),\n      })\n    case Actions.DAO_CREATE_REM_SCHEME:\n      return R.merge(state, {\n        schemes: R.without([action.payload], state.schemes),\n      })\n    case Actions.DAO_CREATE_ADD_VOTE_MACHINE:\n      return R.merge(state, { votingMachineConfiguration: action.payload })\n    case Actions.DAO_CREATE_SET_DEPLOYED_DAO:\n      return R.merge(state, { deployedDao: action.payload })\n    case Actions.DAO_CREATE_SET_STEP_VALIDATION:\n      return R.merge(state, {\n        stepValidation: R.update(\n          action.payload.step,\n          action.payload.isValide,\n          state.stepValidation\n        ),\n      })\n    default:\n      return state\n  }\n}\n","import { Actions, AnyAction } from \"../../redux/actions\"\nimport { WaitingAnimationState } from \"../../AppState\"\n\nconst initialState: WaitingAnimationState = {\n  message: \"\",\n  open: false,\n}\n\nexport const reducer = (\n  state: WaitingAnimationState = initialState,\n  action: AnyAction\n): WaitingAnimationState => {\n  switch (action.type) {\n    case Actions.WAITING_ANIMATION_OPEN:\n      return {\n        message: action.payload.message,\n        type: action.payload.type,\n        open: true,\n      }\n    case Actions.WAITING_ANIMATION_CLOSE:\n      return { message: \"\", open: false }\n    default:\n      return state\n  }\n}\n","import * as notifications from \"./notifications\"\nimport * as daoCreator from \"./daoCreator\"\nimport * as waitingAnimation from \"./waitingAnimation\"\nimport { combineReducers } from \"redux\"\n\nconst reducer = combineReducers({\n  notification: notifications.reducer,\n  waitingAnimation: waitingAnimation.reducer,\n  daoCreator: daoCreator.reducer,\n})\n\nexport default reducer\n","import { createMuiTheme } from \"@material-ui/core\"\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  spacing: {\n    unit: 20,\n  },\n  palette: {\n    primary: {\n      main: \"#2c4b56\",\n      contrastText: \"#fafafa\",\n    },\n    secondary: {\n      main: \"#ffa800\",\n      contrastText: \"#1a1a1a\",\n    },\n  },\n})\n\nexport default theme\n","import * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nimport { MuiThemeProvider } from \"@material-ui/core/styles\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport { ConnectedRouter } from \"connected-react-router\"\nimport { Provider } from \"react-redux\"\n\nimport { configureStore } from \"./redux/store\"\nimport createHashHistory from \"history/createHashHistory\"\n\nimport theme from \"./style/theme\"\n\nconst history = createHashHistory()\nconst store = configureStore(history)\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </MuiThemeProvider>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\") as HTMLElement\n)\n","import { createStore, applyMiddleware, compose, Store } from \"redux\"\nimport thunkMiddleware from \"redux-thunk\"\nimport reducer from \"../../redux/reducers\"\nimport { connectRouter, routerMiddleware } from \"connected-react-router\"\nimport { History } from \"history\"\n\nexport function configureStore(history: History): Store<any> {\n  // Redux DevTools\n  const composeEnhancers =\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n  const store = createStore(\n    connectRouter(history)(reducer),\n    composeEnhancers(\n      applyMiddleware(routerMiddleware(history), thunkMiddleware)\n    )\n  )\n\n  return store\n}\n","import {\n  FounderConfig,\n  SchemeConfig,\n  NewDaoConfig,\n  DAO as ArcDAO,\n} from \"@daostack/arc.js\"\nimport { BigNumber } from \"bignumber.js\"\nimport * as R from \"ramda\"\nimport {\n  DAO,\n  Founder,\n  Scheme,\n  VotingMachine,\n  VotingMachineConfiguration,\n} from \"./types\"\n\nconst toFounderConfigs = (founders: Founder[]): FounderConfig[] =>\n  R.map(\n    ({ address, tokens, reputation }) => ({\n      address,\n      tokens: new BigNumber(tokens),\n      reputation: new BigNumber(reputation),\n    }),\n    founders\n  )\n\nconst toSchemeConfigs = (schemes: Scheme[]): SchemeConfig[] =>\n  R.map(scheme => ({ name: scheme.typeName }), schemes)\n\nconst toVotingMachineParams = (\n  votingMachineConfiguration: VotingMachineConfiguration\n) => ({\n  votingMachineParams: {\n    votingMachineName: votingMachineConfiguration.typeName,\n    ...votingMachineConfiguration.params,\n  },\n})\n\nexport const toNewDaoConfig = (\n  naming: any,\n  founders: Founder[],\n  schemes: Scheme[],\n  votingMachineConfiguration: VotingMachineConfiguration\n): NewDaoConfig => {\n  const { daoName, tokenName, tokenSymbol } = naming\n  return {\n    name: daoName,\n    // tokenCap?: BigNumber | string,\n    tokenName,\n    tokenSymbol,\n    founders: toFounderConfigs(founders),\n    // daoCreatorAddress?: Address,\n    // universalController?: boolean,\n    votingMachineParams: toVotingMachineParams(votingMachineConfiguration),\n    schemes: toSchemeConfigs(schemes),\n  }\n}\n\nexport const fromDao = async (arkDao: ArcDAO): Promise<DAO> => ({\n  avatarAddress: arkDao.avatar.address,\n  controllerAddress: arkDao.controller.address,\n  tokenName: arkDao.token.name,\n  tokenSymbol: await arkDao.token.getTokenSymbol(),\n  name: arkDao.name,\n})\n","import { Scheme } from \"./types\"\n\nexport const schemes: Scheme[] = [\n  {\n    typeName: \"ContributionReward\",\n    displayName: \"Contributor Rewards\",\n    description:\n      \"Contributors can propose rewards for themselves and others. These rewards can be tokens, reputation, or a combination.\",\n    toggleDefault: true,\n  },\n  {\n    typeName: \"VoteInOrganizationScheme\",\n    displayName: \"DAO to DAO Voting\",\n    description:\n      \"Proposals that, when passed, invoke a vote within another DAO.\",\n    toggleDefault: true,\n  },\n  // Currently not available.\n  // https://daostack.github.io/arc/generated_docs/universalSchemes/DaoCreator/\n  // {\n  //   typeName: \"DAOCreator\",\n  //   displayName: \"DAO Creator\",\n  //   description: \"Makes it possible for the DAO to create new DAOs.\",\n  //   toggleDefault: true,\n  // },\n  {\n    typeName: \"SimpleICO\",\n    displayName: \"Initial Coin Offering (ICO)\",\n    description: \"DAO run ICOs.\",\n    toggleDefault: false,\n  },\n  {\n    typeName: \"VestingScheme\",\n    displayName: \"Token Vesting\",\n    description: \"Add the possibility of creating a token vesting agreement.\",\n    toggleDefault: false,\n  },\n  {\n    typeName: \"OrganizationRegister\",\n    displayName: \"Organization Register\",\n    description:\n      \"Makes it possible for the DAO to open a registry. Other DAOs can then add and promote themselves on this registry.\",\n    toggleDefault: false,\n  },\n  {\n    typeName: \"UpgradeScheme\",\n    displayName: \"Upgrade\",\n    description: \"Enables the DAO to upgrade itself.\",\n    toggleDefault: true,\n  },\n  {\n    typeName: \"SchemeRegistrar\",\n    displayName: \"Feature Registrar\",\n    description:\n      \"Manages post-creation adding/modifying and removing of features. Features add functionality to the DAO.\",\n    toggleDefault: true,\n  },\n  {\n    typeName: \"GlobalConstraintRegistrar\",\n    displayName: \"Global Constraint Registrar\",\n    description:\n      'Makes it possible to add/modify and remove constraints for the DAO. A constraint defines what \"cannot be done\" in the DAO. For instance, limit the number of tokens that a DAO can create.',\n    toggleDefault: true,\n  },\n]\n","import { VotingMachine } from \"./types\"\n\nexport const votingMachines: VotingMachine[] = [\n  {\n    typeName: \"AbsoluteVote\",\n    displayName: \"Absolute Vote\",\n    description:\n      \"This system counts one person one vote and a majority is determined by a percentage.\",\n    params: [\n      {\n        typeName: \"ownerVote\",\n        valueType: \"boolean\",\n        displayName: \"Proposer Voting\",\n        description: \"Allow proposers to vote on their own proposals.\",\n        defaultValue: false,\n      },\n      {\n        typeName: \"votePerc\",\n        valueType: \"number\",\n        displayName: \"Majority Percentage\",\n        description: \"The percentage of voters necessary to reach consensus.\",\n        defaultValue: 50,\n      },\n    ],\n  },\n  {\n    typeName: \"GenesisProtocol\",\n    displayName: \"Genesis Protocol\",\n    description:\n      \"This is the first iteration of the GenesisDAO protocol. This voting machine reflects the rules for staking and boosting proposals where voters lose or gain REP depending on the outcome.\",\n    params: [\n      {\n        typeName: \"boostedVotePeriodLimit\",\n        valueType: \"number\",\n        displayName: \"Boosted Vote Period Limit\",\n        description:\n          \"The time limit in seconds for a proposal to be in the boosted phase, inclusive of the quietEndingPeriod, in seconds. Default is 259200 (three days).\",\n        defaultValue: 259200,\n      },\n      {\n        typeName: \"daoBountyConst\",\n        valueType: \"number\",\n        displayName: \"DAO Bounty Const\",\n        description:\n          \"Multiple of a winning stake to be rewarded as bounty. Must be greater than stakerFeeRatioForVoters and less than 2*stakerFeeRatioForVoters. Default is 75.\",\n        defaultValue: 75,\n      },\n      {\n        typeName: \"daoBountyLimit\",\n        valueType: \"BigNumber\",\n        displayName: \"DAO Bounty Limit\",\n        description:\n          \"Upper bound on the total bounty amount on a proposal. Default is 100, converted to Wei.\",\n        defaultValue: 100,\n      },\n      {\n        typeName: \"minimumStakingFee\",\n        valueType: \"BigNumber\",\n        displayName: \"Minimum Staking Fee\",\n        description:\n          \"A floor on the staking fee which is normally computed using [[GenesisProtocolParams.stakerFeeRatioForVoters]], in Wei.  Default is 0.\",\n        defaultValue: 0,\n      },\n      {\n        typeName: \"preBoostedVotePeriodLimit\",\n        valueType: \"number\",\n        displayName: \"Pre Boosted Vote Period Limit\",\n        description:\n          \" The time limit in seconds that a proposal can be in the preBoosted phase before it will be automatically closed, in seconds, with a winning vote of NO, regardless of the actual value of the winning vote at the time expiration. Note an attempt must be made to execute before the proposal state will actually change. Default is 1814400 (three weeks).\",\n        defaultValue: 1814400,\n      },\n      {\n        typeName: \"preBoostedVoteRequiredPercentage\",\n        valueType: \"number\",\n        displayName: \"Pre Boosted Vote Required Percentage\",\n        description:\n          \"The percent of the DAO's total supply of reputation that, when exceeded by the amount of reputation behind a vote (yes or no), will result in the immediate execution of the proposal, during either the preboosted or boosted phases. Must be greater than zero and less than or equal to 100. Default is 50.\",\n        defaultValue: 50,\n      },\n      {\n        typeName: \"proposingRepRewardConstA\",\n        valueType: \"number\",\n        displayName: \"Proposing Rep Reward Const A\",\n        description:\n          \" Constant A in the calculation of the proposer's reputation reward. Must be between 0 and 100000000. Default is 5.\",\n        defaultValue: 5,\n      },\n      {\n        typeName: \"proposingRepRewardConstB\",\n        valueType: \"number\",\n        displayName: \"Proposing Rep Reward Const B\",\n        description:\n          \"Constant B in the calculation of the proposer's reputation reward. Must be between 0 and 100000000. Default is 5.\",\n        defaultValue: 5,\n      },\n      {\n        typeName: \"quietEndingPeriod\",\n        valueType: \"number\",\n        displayName: \"Quiet Ending Period\",\n        description:\n          \"The duration, in seconds, at the end of the boosted phase during which any vote that changes the outcome of a proposal will cause the boosted phase to be extended by the amount of the quietEndingPeriod.  If the quietEndingPeriod expires then the proposal expires and may be executed.  It is a moving window:  If the winning vote switches during the quietEndingPeriod then it restarts at the point in time when the vote switched, thus extending the boosted period. Default is 86400 (one day).\",\n        defaultValue: 86400,\n      },\n      {\n        typeName: \"stakerFeeRatioForVoters\",\n        valueType: \"number\",\n        displayName: \"Staker Fee Ratio For Voters\",\n        description:\n          \"For executed proposals, the percentage of staked tokens that is rewarded to all voters, regardless of the vote outcome, the staked vote outcome, or how the voter voted. Voters share this amount in proportion to the amount of reputation they voted. Must be between 0 and 100. Default is 50.\",\n        defaultValue: 50,\n      },\n      {\n        typeName: \"thresholdConstA\",\n        valueType: \"BigNumber\",\n        displayName: \"Threshold Const A\",\n        description:\n          \"Constant A in the threshold calculation, in Wei. See [[GenesisProtocolWrapper.getThreshold]]. If the difference between Yes and No votes exceeds the threshold, then the proposal may be boosted. Must be between 0 and 100000000 (converted to Wei). Default is 7, converted to Wei.\",\n        defaultValue: 7,\n      },\n      {\n        typeName: \"thresholdConstB\",\n        valueType: \"BigNumber\",\n        displayName: \"Threshold Const B\",\n        description:\n          \" Constant B in the threshold calculation. See [[GenesisProtocolWrapper.getThreshold]]. If the difference between Yes and No votes exceeds the threshold, then the proposal may be boosted. Must be greater than zero and less than or equal to 100000000. Default is 3.\",\n        defaultValue: 3,\n      },\n      {\n        typeName: \"voteOnBehalf\",\n        valueType: \"Address\",\n        displayName: \"Vote On Behalf\",\n        description:\n          \"optional, to always vote on behalf of the given account.  Otherwise is `msg.sender`.\",\n        defaultValue: \"\",\n        optional: true,\n      },\n      {\n        typeName: \"votersGainRepRatioFromLostRep\",\n        valueType: \"number\",\n        displayName: \"Voters Gain Rep Ratio From Lost Rep\",\n        description:\n          \"The percentage of losing pre-boosted voters' lost reputation (see votersReputationLossRatio) rewarded to winning pre-boosted voters. Must be between 0 and 100. Default is 80. \",\n        defaultValue: 80,\n      },\n      {\n        typeName: \"votersReputationLossRatio\",\n        valueType: \"number\",\n        displayName: \"Voters Reputation Loss Ratio\",\n        description:\n          \"The percentage of reputation deducted from losing pre-boosted voters. Must be between 0 and 100. Default is 1.\",\n        defaultValue: 1,\n      },\n    ],\n  },\n  // TODO: Add this once there is a wrapper available. Arc.js doesn't have this contract wrapped yet.\n  /*{\n    typeName: \"QuorumVote\",\n    displayName: \"Quorum Vote\",\n    description:\n      \"Every member has one vote and a quorum is reached based on a ratio of the total number of possible participants\",\n    params: [ TODO: Add me ],\n  },*/\n]\n","export * from \"./types\"\nexport * from \"./typeConversions\"\nexport * from \"./schemes\"\nexport * from \"./votingMachines\"\n\nimport {\n  DAO as ArcDAO,\n  NewDaoConfig,\n  ConfigService,\n  InitializeArcJs,\n} from \"@daostack/arc.js\"\nimport {\n  DAO,\n  Founder,\n  Scheme,\n  VotingMachine,\n  VotingMachineConfiguration,\n} from \"./types\"\nimport { toNewDaoConfig, fromDao } from \"./typeConversions\"\n\nlet isInitialized = false\n\nexport const init = async () => {\n  // Initialize the ArcJS library\n  ConfigService.set(\"estimateGas\", true)\n  ConfigService.set(\"txDepthRequiredForConfirmation.kovan\", 0)\n\n  // TODO: If you use Kovan uncomment this line\n  // ConfigService.set(\"network\", \"kovan\") // Set the network used to Kovan\n\n  await InitializeArcJs({\n    watchForAccountChanges: true,\n  })\n\n  isInitialized = true\n}\n\nexport const createDao = async (\n  naming: any,\n  founders: Founder[],\n  schemes: Scheme[],\n  votingMachine: VotingMachineConfiguration\n): Promise<DAO> => {\n  if (!isInitialized) {\n    await init()\n  }\n\n  const newDaoConfig: NewDaoConfig = toNewDaoConfig(\n    naming,\n    founders,\n    schemes,\n    votingMachine\n  )\n\n  try {\n    const rawDao: ArcDAO = await ArcDAO.new(newDaoConfig)\n    console.log(\"DAO created\")\n    console.log(rawDao)\n\n    const dao: DAO = await fromDao(rawDao)\n    console.log(dao)\n\n    return dao\n  } catch (e) {\n    console.log(\"Error while deploying DAO:\")\n    console.error(e)\n    return Promise.reject(e)\n  }\n}\n","var map = {\n\t\"./ARCDebug.json\": 956,\n\t\"./ARCGenesisProtocolCallbacksMock.json\": 957,\n\t\"./ARCVotingMachineCallbacksMock.json\": 958,\n\t\"./AbsoluteVote.json\": 959,\n\t\"./AbsoluteVoteExecuteMock.json\": 960,\n\t\"./ActionMock.json\": 961,\n\t\"./Auction4Reputation.json\": 962,\n\t\"./Avatar.json\": 963,\n\t\"./BasicToken.json\": 964,\n\t\"./BurnableToken.json\": 965,\n\t\"./ContributionReward.json\": 966,\n\t\"./Controller.json\": 967,\n\t\"./ControllerCreator.json\": 968,\n\t\"./ControllerInterface.json\": 969,\n\t\"./DAOToken.json\": 970,\n\t\"./DaoCreator.json\": 971,\n\t\"./Debug.json\": 972,\n\t\"./Destructible.json\": 973,\n\t\"./ECRecovery.json\": 974,\n\t\"./ERC20.json\": 975,\n\t\"./ERC20Basic.json\": 976,\n\t\"./ERC827.json\": 977,\n\t\"./ERC827Token.json\": 978,\n\t\"./ERC827TokenMock.json\": 979,\n\t\"./ExternalLocking4Reputation.json\": 980,\n\t\"./ExternalTokenLockerMock.json\": 981,\n\t\"./FixedReputationAllocation.json\": 982,\n\t\"./Forwarder.json\": 983,\n\t\"./GenericScheme.json\": 984,\n\t\"./GenesisProtocol.json\": 985,\n\t\"./GenesisProtocolCallbacks.json\": 986,\n\t\"./GenesisProtocolCallbacksInterface.json\": 987,\n\t\"./GenesisProtocolCallbacksMock.json\": 988,\n\t\"./GenesisProtocolExecuteInterface.json\": 989,\n\t\"./GlobalConstraintInterface.json\": 990,\n\t\"./GlobalConstraintMock.json\": 991,\n\t\"./GlobalConstraintRegistrar.json\": 992,\n\t\"./IntVoteInterface.json\": 993,\n\t\"./Locking4Reputation.json\": 994,\n\t\"./LockingEth4Reputation.json\": 995,\n\t\"./LockingToken4Reputation.json\": 996,\n\t\"./Migrations.json\": 997,\n\t\"./MintableToken.json\": 998,\n\t\"./MirrorContractICO.json\": 999,\n\t\"./OrderStatisticTree.json\": 1000,\n\t\"./OrganizationRegister.json\": 1001,\n\t\"./Ownable.json\": 1002,\n\t\"./ProposalExecuteInterface.json\": 1003,\n\t\"./QuorumVote.json\": 1004,\n\t\"./RealMath.json\": 1005,\n\t\"./Redeemer.json\": 1006,\n\t\"./Reputation.json\": 1007,\n\t\"./SafeERC20.json\": 1008,\n\t\"./SafeMath.json\": 1009,\n\t\"./SchemeRegistrar.json\": 1010,\n\t\"./SimpleICO.json\": 1011,\n\t\"./StandardToken.json\": 1012,\n\t\"./StandardTokenMock.json\": 1013,\n\t\"./TokenCapGC.json\": 1014,\n\t\"./UController.json\": 1015,\n\t\"./UniversalScheme.json\": 1016,\n\t\"./UniversalSchemeInterface.json\": 1017,\n\t\"./UniversalSchemeMock.json\": 1018,\n\t\"./UpgradeScheme.json\": 1019,\n\t\"./VestingScheme.json\": 1020,\n\t\"./VoteInOrganizationScheme.json\": 1021,\n\t\"./VotingMachineCallbacks.json\": 1022,\n\t\"./VotingMachineCallbacksInterface.json\": 1023,\n\t\"./migration.json\": 1024\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 955;"],"sourceRoot":""}